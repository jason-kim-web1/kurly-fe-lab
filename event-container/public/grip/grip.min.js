const GcFloating = function (r, t) {
    const n = { MOBILE: 1, PC: 2 };
    let o = null,
      i = null,
      l = null,
      e = null,
      s = !1,
      d = 0,
      c = 0,
      a = window.innerWidth,
      u = window.innerHeight;
    function p(e) {
      e.preventDefault(), t.destroy();
    }
    function y(e) {
      e.target === l &&
        ((o.style['background-color'] = 'transparent'), (e = i.parentNode) && e.removeChild(i), t.unmute());
    }
    function h(e) {
      if (e.target === l) {
        if (e.type.includes('mouse')) (d = e.clientX), (c = e.clientY);
        else {
          if (!e.type.includes('touch')) return;
          (d = e.touches[0].clientX), (c = e.touches[0].clientY);
        }
        (a = window.innerWidth), (u = window.innerHeight), (s = !0);
      }
    }
    function v(n) {
      if (s) {
        let e, t;
        if (n.type.includes('mouse')) (e = n.clientX), (t = n.clientY);
        else {
          if (!n.type.includes('touch')) return;
          (e = n.touches[0].clientX), (t = n.touches[0].clientY);
        }
        var [n, o] = [d - e, c - t],
          i = ((d = e), (c = t), r),
          n = i.offsetLeft - n,
          o = i.offsetTop - o;
        n <= 0
          ? (i.style.left = '0px')
          : n > a - i.clientWidth
          ? (i.style.left = a - i.clientWidth + 'px')
          : (i.style.left = n + 'px'),
          o <= 0
            ? (i.style.top = '0px')
            : o > u - i.clientHeight
            ? (i.style.top = u - i.clientHeight + 'px')
            : (i.style.top = o + 'px'),
          (i.style.right = 'auto'),
          (i.style.bottom = 'auto');
      }
    }
    function m(e) {
      s = !1;
    }
    return {
      DEVICE_TYPE: n,
      init: function (e) {
        e === n.MOBILE
          ? ((r.style.width = '117px'), (r.style.height = '208px'), (r.style.bottom = '10px'), (r.style.right = '10px'))
          : ((r.style.width = '180px'),
            (r.style.height = '320px'),
            (r.style.bottom = '20px'),
            (r.style.right = '20px')),
          (r.style.position = 'fixed'),
          (r.style['z-index'] = '999999'),
          (r.style['touch-action'] = 'none'),
          (r.style['min-width'] = 'auto'),
          (r.style.top = 'auto'),
          (r.style.left = 'auto'),
          (r.style['user-select'] = 'none');
      },
      handleEvent: function () {
        (o = document.createElement('div')),
          ((i = document.createElement('div')).innerHTML =
            '<svg xmlns="http://www.w3.org/2000/svg" height="40px" viewBox="0 0 24 24" width="40px" fill="#ffffff" style="opacity: 0.6;"><path d="M0 0h24v24H0z" fill="none"/><path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/></svg>'),
          ((l = document.createElement('div')).style.position = 'absolute'),
          (l.style.width = '100%'),
          (l.style.height = '100%'),
          (l.style.top = '0'),
          (l.style.right = '0'),
          ((e = document.createElement('div')).style.position = 'absolute'),
          (e.style.top = '0'),
          (e.style.right = '0'),
          (e.style.padding = '6px'),
          (e.style['z-index'] = '9900'),
          (e.style.cursor = 'pointer'),
          (e.innerHTML =
            '<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#ffffff"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>'),
          l.appendChild(e),
          o.appendChild(i),
          o.appendChild(l),
          (o.style.position = 'absolute'),
          (o.style.top = '0'),
          (o.style.left = '0'),
          (o.style.width = '100%'),
          (o.style.height = '100%'),
          (o.style['z-index'] = '9000'),
          (o.style.cursor = 'grab'),
          (o.style.display = 'flex'),
          (o.style['justify-content'] = 'center'),
          (o.style['align-items'] = 'center'),
          (o.style['background-color'] = 'rgba(0,0,0,0.2)'),
          r.appendChild(o),
          r.appendChild(e),
          window.addEventListener('click', y, !1),
          window.addEventListener('mousedown', h, !1),
          window.addEventListener('mousemove', v, !1),
          window.addEventListener('mouseup', m, !1),
          window.addEventListener('touchstart', h, !1),
          window.addEventListener('touchmove', v, !1),
          window.addEventListener('touchend', m, !1),
          e.addEventListener('click', p);
      },
      destroy: function () {
        window.removeEventListener('click', y, !1),
          window.removeEventListener('mousedown', h, !1),
          window.removeEventListener('mousemove', v, !1),
          window.removeEventListener('mouseup', m, !1),
          window.removeEventListener('touchstart', h, !1),
          window.removeEventListener('touchmove', v, !1),
          window.removeEventListener('touchend', m, !1),
          e.removeEventListener('click', p, !1),
          o.remove();
      },
    };
  },
  GcStorage = function () {
    const t = 'gripcloud';
    function n(e) {
      return (
        e && e.constructor === Object && e.hasOwnProperty('value') && !(!e.hasOwnProperty('exp') || Date.now() > e.exp)
      );
    }
    function i() {
      try {
        return JSON.parse(localStorage.getItem(t)) || {};
      } catch (e) {
        return console.error(e), {};
      }
    }
    function r(e) {
      try {
        localStorage.setItem(t, JSON.stringify(e));
      } catch (e) {
        console.error(e);
      }
    }
    try {
      var e = i();
      for (const o in e) n(e[o]) || delete e[o];
      r(e);
    } catch (e) {
      console.error(e);
    }
    return {
      setData: function (e, t, n) {
        try {
          var o = i();
          (o[e] = { value: t, exp: Date.now() + n }), r(o);
        } catch (e) {
          console.error(e);
        }
      },
      getData: function (e) {
        try {
          var t = i()[e];
          return n(t) ? t.value : null;
        } catch (e) {
          return null;
        }
      },
    };
  };
var Gripcloud = (function () {
    'use strict';
    const g = 'https://home.gripcloud.show',
      E = window.matchMedia('(max-width: 32rem)'),
      I = { HOME: 0, LIVE_WIDGET: 1, SHORTS_WIDGET: 2, BANNER_WIDGET: 3, LIVE_PLAYER: 4, SHORTS_PLAYER: 5 },
      L = { USER: 1, MANAGER: 2 },
      T = { ID: 'id', NICK: 'nick', GENDER: 'gender', AGE: 'age' },
      x = {},
      _ = GcStorage();
    let O = function () {};
    return {
      TYPE: I,
      PLAYER_TYPE: L,
      load: function (t) {
        let n = null,
          o = null,
          i = null,
          r = null;
        function e() {
          try {
            i.destroy(), o && (o.src = 'about:blank'), n && ((n.innerHTML = ''), r) && (r.destroy(), n.remove());
          } catch (e) {
            console.error(e);
          }
        }
        var l = t.type;
        if (void 0 === (l = t.homeId ? I.HOME : l)) return alert('Please enter type first.'), null;
        if (!(h = t.parentId || 'embed')) return alert('Please enter parentId first.'), null;
        if (null === (n = document.getElementById(h)))
          return alert('The element with the ID "parentId" could not be found.'), null;
        var s,
          d,
          c,
          a = (function (e, t) {
            if (e._ && e._.isPreview) return { id: 'preview', url: g + '/home/preview' };
            if (e.homeId) return { id: (n = e.homeId), url: g + '/home/' + n };
            if (e.widgetId) {
              var n = e.widgetId;
              if (t === I.LIVE_WIDGET) return { id: n, url: g + '/widget/live/' + n };
              if (t === I.SHORTS_WIDGET) return { id: n, url: g + '/widget/shorts/' + n };
              if (t === I.BANNER_WIDGET) return { id: n, url: g + '/widget/banner/' + n };
            }
            if (e.channelId) {
              n = e.channelId;
              if (t === I.LIVE_PLAYER) return { id: n, url: g + '/player/live/' + n };
            }
            if (e.playlistId) {
              n = e.playlistId;
              if (t === I.SHORTS_PLAYER) return { id: n, type: t, url: g + '/player/shorts/' + n };
            }
            return alert('Please double-check the "id" and "type" once again.'), null;
          })(t, l),
          u = {};
        t.session &&
          'string' ==
            typeof (c =
              (c = t.session).constructor === Object
                ? (s = c)[T.ID]?.trim() && s[T.NICK]?.trim()
                  ? ((d = new XMLHttpRequest()).open('POST', g + '/v1/jwt', !1),
                    d.setRequestHeader('Content-Type', 'application/json'),
                    d.send(JSON.stringify({ id: s[T.ID], nick: s[T.NICK], gender: s[T.GENDER], age: s[T.AGE] })),
                    200 === d.status
                      ? JSON.parse(d.responseText).result
                      : (console.error('Failed to create session'), ''))
                  : (console.error('session.id and session.nick is required.'), '')
                : c) &&
          (u.session = c);
        let p = {};
        if (
          (t.custom &&
            (l === I.LIVE_PLAYER &&
              t.custom.useFloating &&
              ((s = {
                unmute: () => {
                  i.send('key', 'mute', { mute: !1 });
                },
                destroy: function () {
                  e();
                },
              }),
              (r = GcFloating(n, s)),
              (d = E.matches ? r.DEVICE_TYPE.MOBILE : r.DEVICE_TYPE.PC),
              r.init(d)),
            (c = t.custom).playerType && [L.MANAGER].includes(c.playerType) && (u.playerType = c.playerType),
            c.initContentId && (u.contentId = c.initContentId),
            (p = c.events)),
          t._ && t._.isPreview)
        ) {
          if (!t.accessKey) return alert('Please enter accessKey first.'), !1;
          (u.accessKey = t.accessKey),
            (u.widgetIds = t._.widgetIds),
            (u.homeTheme = t._.homeTheme),
            (u.homeThemeType = t._.homeThemeType);
        }
        (u.domain =
          'file:' === location.protocol
            ? '*'
            : ((c = location.protocol + '//' + location.hostname), location.port && (c += ':' + location.port), c)),
          (y = u);
        var y,
          u =
            '?' +
            Object.getOwnPropertyNames(y)
              .map((t) => {
                var e = y[t];
                return Array.isArray(e)
                  ? e.map((e) => String(t) + '=' + encodeURIComponent(e)).join('&')
                  : String(t) + '=' + encodeURIComponent(y[t]);
              })
              .join('&'),
          u = a.url + u;
        {
          var [h, u, l, a, v = {}, m = {}] = [h, u, l, a.id, t.custom, p];
          (h = 'iframe_' + h),
            ((o = document.createElement('iframe')).id = h),
            (o.style.width = '100%'),
            (o.style.border = 'none'),
            (o.style.overflow = 'hidden'),
            (o.style.display = 'block'),
            (o.allow = 'autoplay'),
            (o.src = u),
            [I.LIVE_WIDGET, I.SHORTS_WIDGET, I.BANNER_WIDGET].includes(l)
              ? (o.style.height = '0')
              : (o.style.height = '100%'),
            n.appendChild(o),
            (i = (function (e) {
              const o = { targetOrigin: null, iframeId: null, messageId: null, receiveCallback: () => {}, ...e };
              let i = !1;
              const r = {},
                n = [],
                t = setInterval(() => {
                  !1 !== i && 0 !== n.length && c(n.splice(0, 1)[0]);
                }, 10),
                l = document.getElementById(o.iframeId);
              function s(e) {
                var t, n;
                e.origin === o.targetOrigin &&
                  ((e = e.data), o.messageId === e.id) &&
                  (i
                    ? (({ type: t, data: n } = e.request),
                      o.receiveCallback(e),
                      (t = t),
                      (n = n),
                      r.hasOwnProperty(t) && (0, r[t])(n))
                    : 'pong' === e.request.type &&
                      (console.log('receive pong'), (i = !0), console.log('connected client')));
              }
              function d(e = null, t = {}) {
                return { id: o.messageId, sendTime: Date.now(), request: { type: e, data: t } };
              }
              function c(e) {
                l.contentWindow.postMessage(e, o.targetOrigin);
              }
              function a() {
                console.log('send ping'),
                  c(d('ping')),
                  setTimeout(() => {
                    !1 === i && console.error('connect failed.');
                  }, 1e4);
              }
              return (
                l.addEventListener('load', a, !0),
                window.addEventListener('message', s, !1),
                {
                  isConnected: () => i,
                  send: function (e = null, t = {}) {
                    n.push(d(e, t));
                  },
                  on: function (e, t) {
                    r[e] = t;
                  },
                  destroy: function () {
                    x.hasOwnProperty('overflow') &&
                      ('' === x.overflow
                        ? document.body.style.removeProperty('overflow')
                        : (document.body.style.overflow = x.overflow)),
                      x.hasOwnProperty('overscrollBehavior') &&
                        ('' === x.overscrollBehavior
                          ? document.body.style.removeProperty('overscroll-behavior')
                          : (document.body.style.overscrollBehavior = x.overscrollBehavior)),
                      clearInterval(t),
                      window.removeEventListener('message', s, !1),
                      l.removeEventListener('load', a, !0),
                      c('destroy');
                  },
                }
              );
            })({ targetOrigin: g, iframeId: h, messageId: a })),
            (u = (e = {}) => {
              let t = {};
              v?.hasOwnProperty('events') &&
                Object.keys(v?.events).forEach((n) => {
                  const e = v?.events[n];
                  (t[n] = !0),
                    i.on(n, (t) => {
                      var o;
                      (o = e),
                        ((e, n) =>
                          new Promise((t) => {
                            (e.done = (e = null) => {
                              n(e), t();
                            }),
                              o(e);
                          }))(t, (e = !1) => {
                          i.send(n + 'Done', { key: t.key, data: t.value.data, doneData: e });
                        });
                    });
                });
              e = { ...e, events: t };
              i.send('load', e);
            });
          const f = (e) => {
            i.send('getHeight');
          };
          let e = {};
          [I.LIVE_PLAYER].includes(l)
            ? ((e = {
                useFloating: v.useFloating || !1,
                couponList: v.couponList || void 0,
                confirmCellular: v.confirmCellular || void 0,
                couponBoxCount: v.couponBoxCount || void 0,
                excludeNotification: v.excludeNotification || [],
                couponLoginGuide: v.couponLoginGuide || !1,
                showProduct: !1 !== v.showProduct,
              }),
              i.on('loaded', (e) => {
                v.useFloating && r.handleEvent(n);
              }),
              i.on('setStorage', (e) => {
                _.setData(e.key, e.value, e.ttl);
              }))
            : [I.SHORTS_PLAYER].includes(l)
            ? ((x.overflow = document.body.style.overflow),
              (x.overscrollBehavior = document.body.style.overscrollBehavior),
              (document.body.style.overflow = 'hidden'),
              (document.body.style.overscrollBehavior = 'none'),
              (e = { productList: v.productList || void 0 }),
              i.on('loaded', (e) => {}))
            : [I.SHORTS_WIDGET].includes(l) &&
              ((e = { autoplay: v.autoplay }),
              i.on('loaded', (e) => {
                f();
              })),
            [I.LIVE_WIDGET, I.SHORTS_WIDGET, I.BANNER_WIDGET].includes(l) &&
              (i.on('getHeight', function (e) {
                e = e.value;
                o.style.height = 0 === e ? '0px' : e + 'px';
              }),
              f()),
            [I.LIVE_PLAYER].includes(l)
              ? ((h = t.channelId), (a = _.getData('sessionId_' + h)), (e.sessionId = a || null), u(e))
              : [I.SHORTS_PLAYER, I.SHORTS_WIDGET].includes(l) && u(e);
          try {
            for (const w of Object.keys(m)) i.on('custom_' + w, m[w]);
          } catch (e) {
            console.error('events connection error.');
          }
        }
        return {
          set: function (e = null, t = {}) {
            i.send('set', { key: e, data: t });
          },
          remove: (O = e),
        };
      },
      destroy: O,
    };
  })(),
  GcHome = Gripcloud,
  GripCloud = Gripcloud;
