server {
    listen              80; # 80포트 요청 수신
    listen              [::]:80; # IPv6 80포트 요청 수신
    server_name         www.local.kurly.com; # Host 요청 헤더와 일치하면 해당 블록의 규칙 적용

    location / {
        proxy_pass          http://host.docker.internal:3000; # 요청을 로컬 호스트에서 3000포트로 구동 중인 서버로 전달
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          "upgrade";
    }
}

server {
    listen              443 ssl; # 443포트 요청 수신
    listen              [::]:443 ssl; # IPv6 443포트 요청 수신
    server_name         www.local.kurly.com; # Host 요청 헤더와 일치하면 해당 블록의 규칙 적용

    ssl_certificate     ./certs/cert.pem; # cert 파일 지정
    ssl_certificate_key ./certs/key.pem; # key 파일 지정

    location / {
        proxy_pass          http://host.docker.internal:3000; # 요청을 로컬 호스트에서 3000포트로 구동 중인 서버로 전달
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          "upgrade";
    }
}
